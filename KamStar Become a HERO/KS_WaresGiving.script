
	
{$EVENT evtBeacon:OnBeaconPrzekazywanie}
{$EVENT evtTick:OnTickPrzekazywanie}
{$EVENT evtMissionStart:OnMissionStartPrzekazywanie}
/////
/////
/////
/////
/////
const 
	WARES_TO_GIVE_COUNT = 5;
	
procedure OnBeaconPrzekazywanie(aPlayer,X,Y:Integer);
var aOwner : Integer;
begin
	If aPlayer = 0 then 
		If States.FogRevealed(aPlayer,X,Y) then
		begin
			If States.MapTileOwner(X,Y)<>-1 then 
				If States.MapTileOwner(X,Y) <> aPlayer then
				begin
					If U.ArrayHasElementI(States.MapTileOwner(X,Y),[4,5,6]) then 
					begin    
						Gracz:=States.MapTileOwner(X,Y);  
						Actions.ShowMSGFormatted(aPlayer, '<$131>',[States.PlayerColorText(Gracz),'<$' + IntToStr(Gracz+96)+'>']);
					end;
					
					If VillageQuestGiver[5].QEventType = 14	then
					begin
						If U.ArrayHasElementI(States.MapTileOwner(X,Y),[13]) then 
						begin    
							Gracz:=States.MapTileOwner(X,Y);  
							Actions.ShowMSGFormatted(aPlayer, '<$131>',[States.PlayerColorText(Gracz),'<$725>']);
						end;
					end;
				end;
			If CanSendArmy then 
				If States.GameTime > TimeGroup then 
					If Gracz <> 0 then 
					begin	
						If (Confirm = 1) and (States.GroupAt(X,Y) <= 0) then 
						begin
							Confirm := 0;
							GroupID := 0;
							A.ShowMsg(0, 'Troops was not send.')
						end;
						If (Confirm = 1) and ((States.GroupAt(X,Y) > 0) and(States.GroupAt(X,Y) <> GroupID )) then 
						begin
							Confirm := 1;
							GroupID := States.GroupAt(X,Y);
							A.ShowMsg(0, 'Do you want to send these troops to another player?')
						end;
						If States.GroupAt(X,Y) > 0 then 
						begin
							If States.GroupOwner(States.GroupAt(X,Y)) = 0 then 
								If U.ArrayHasElementI(States.GroupType(States.GroupAt(X,Y)), aPlayersGType[Gracz]) then 
								begin
									If Confirm = 0 then 
									begin
										Confirm := 1;
										GroupID := States.GroupAt(X,Y);
										A.ShowMsg(0, 'Do you want to send these troops to another player?')
									end else
									If Confirm = 1 then 
									begin
										Confirm := 0;
										A.ShowMsg(0, 'troops sent');
										GiveGroupAtGroup(Gracz,GroupID);
										//GroupID := 0;
									end;
								end else
								A.ShowMsg(0, 'Wrong group type to send');
									
						end;
					end;
				
		end;
end;

procedure TowaryPrzekazywanie;
var	blenght,Wares:Integer;

begin
	Giving:=False;
	if Gracz <> 0 then  
		for blenght:= 0 to Length(Stores)-1 do 
			If (States.HouseRepair(Stores[blenght]) = true) then 
				for Wares := 0 to 27 do 
					If (States.HouseWareBlockedTakeOut(Stores[blenght],Wares) = true) and (States.HouseResourceAmount(Stores[blenght],Wares) > WARES_TO_GIVE_COUNT) then
					begin
						Actions.HouseTakeWaresFrom(Stores[blenght],Wares,5);
						Giving:=True;
						If States.GameTime > TimeG+300 then begin
							TimeG:=States.GameTime
							TimeT:=States.GameTime+50
						end;
						
						If (States.StatHouseTypeCount(Gracz,21) > 0) and (Utils.InRangeI(Wares,16,26)) then 
							Actions.GiveWeapons(Gracz,Wares,5)   
						else 
							Actions.GiveWares(Gracz,Wares,5);
					end;
end;

procedure Spichrze;
var houses:array of Integer;
	blenght,Index:Integer;

begin
	houses:=States.PlayerGetAllHouses(0)
	for blenght:= 0 to Length(houses)-1 do 
	begin			
		If ((States.HouseType(houses[blenght])= 11) or(States.HouseType(houses[blenght])= 21)) and not (U.ArrayHasElementI(houses[blenght],Stores)) then 
		begin
			Index:=length(Stores);
			SetLength(Stores,Index+1);
			Stores[Index]:=houses[blenght];
		end;
	end;
end;

Procedure SoundsG;
begin
	If Giving=True then
		Actions.PlayWAV(0,'0przekazywanie',1);
end;

Procedure OnTickPrzekazywanie;
begin
	If States.GameTime mod 50 = 0 then
		TowaryPrzekazywanie;
		
	If States.GameTime  = TimeG+10 then SoundsG;
end;

Procedure OnMissionStartPrzekazywanie;
begin
	Gracz:=0;
	Spichrze;
end;